{"version":3,"sources":["components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Container/Container.js","App.js","index.js"],"names":["Title","styled","h1","SectionPhonebook","section","Section","title","children","PhonebookForm","form","PhonebookLabel","label","PhonebookInput","input","PhonebookButton","button","ContactForm","onSubmit","useState","name","setName","number","setNumber","nameInputId","shortid","generate","telInputId","handleChange","e","target","value","preventDefault","htmlFor","id","type","onChange","pattern","required","ContactListStyled","ul","ContactItemStyled","li","ContactInfoStyled","p","ContactButton","ContactList","contacts","onDeleteContact","map","contact","onClick","FilterLabel","FilterInput","Filter","TitleContacts","h2","ContainerContacts","div","Container","App","JSON","parse","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","newContact","find","toLocaleLowerCase","toast","success","normalizeFilter","toLowerCase","includes","getVisibleContacts","contactId","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.453b0152.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Title = styled.h1`\n  padding: 20px;\n  text-transform: uppercase;\n  font-size: 24px;\n  color: #5c6368;\n`;\n\nconst SectionPhonebook = styled.section`\n  text-align: center;\n  width: 400px;\n  margin: 30px auto;\n\n  border: 1px solid grey;\n  border-radius: 2%;\n\n  background: white;\n  box-shadow: -1px 15px 30px -12px black;\n  z-index: 9999;\n`;\n\nexport default function Section({ title, children }) {\n  return (\n    <SectionPhonebook>\n      {title && <Title>{title}</Title>}\n      {children}\n    </SectionPhonebook>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","// import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport shortid from 'shortid';\n\nconst PhonebookForm = styled.form`\n  width: 300px;\n  margin: 0 auto;\n  padding: 16px;\n  border: 1px solid #2a2a2a;\n  border-radius: 4px;\n`;\n\nconst PhonebookLabel = styled.label`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n\n  padding: 12px 16px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n\n  font: inherit;\n  line-height: 16px;\n  letter-spacing: 0.01em;\n\n  resize: none;\n  margin-bottom: 12px;\n`;\n\nconst PhonebookInput = styled.input`\n  padding: 4px 12px;\n  width: 240px;\n  margin-top: 5px;\n  font: inherit;\n  line-height: 12px;\n  letter-spacing: 0.01em;\n`;\n\nconst PhonebookButton = styled.button`\n  border: none;\n  font: inherit;\n  cursor: pointer;\n  outline: none;\n\n  width: 100%;\n  margin-left: auto;\n  border-radius: 4px;\n  padding: 12px 24px;\n  background-color: #3f51b5;\n  color: #fff;\n  font-weight: 500;\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n\n  &:active {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = shortid.generate();\n  const telInputId = shortid.generate();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(name, number);\n    // reset();\n    setName('');\n    setNumber('');\n  };\n\n  // const reset = () => {\n  //   this.setState({ name: '', number: '' });\n  // };\n\n  return (\n    <PhonebookForm onSubmit={handleOnSubmit}>\n      <PhonebookLabel htmlFor={nameInputId}>\n        Name\n        <PhonebookInput\n          id={nameInputId}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </PhonebookLabel>\n      <PhonebookLabel htmlFor={telInputId}>\n        Number\n        <PhonebookInput\n          id={telInputId}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </PhonebookLabel>\n      <PhonebookButton type=\"submit\">Add contact</PhonebookButton>\n    </PhonebookForm>\n  );\n}\n\n// ContactForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n","// import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst ContactListStyled = styled.ul`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n\n  width: 300px;\n  margin: 20px auto;\n\n  padding: 12px 16px;\n  border: 1px solid #2a2a2a;\n  border-radius: 4px;\n\n  font: inherit;\n  line-height: 16px;\n  letter-spacing: 0.01em;\n`;\n\nconst ContactItemStyled = styled.li`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n\n  width: 270px;\n  margin: 5px auto;\n\n  padding: 12px 16px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n\n  font: inherit;\n  line-height: 16px;\n  letter-spacing: 0.01em;\n`;\n\nconst ContactInfoStyled = styled.p`\n  margin-left: 4px;\n`;\n\nconst ContactButton = styled.button`\n  border: none;\n  font: inherit;\n  cursor: pointer;\n  outline: none;\n\n  width: auto;\n  margin-left: auto;\n  border-radius: 4px;\n  padding: 6px;\n  background-color: #3f51b5;\n  color: #fff;\n  font-weight: 500;\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n\n  &:active {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ContactListStyled>\n      {contacts.map(contact => (\n        <ContactItemStyled key={contact.id}>\n          <ContactInfoStyled>{contact.name + ':'}</ContactInfoStyled>\n          <ContactInfoStyled>{contact.number}</ContactInfoStyled>\n          <ContactButton type=\"button\" onClick={() => onDeleteContact(contact.id)}>\n            Удалить\n          </ContactButton>\n        </ContactItemStyled>\n      ))}\n    </ContactListStyled>\n  );\n}\n\n// ContactList.propTypes = {\n//   items: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     }),\n//   ),\n//   onDeleteContact: PropTypes.func.isRequired,\n// };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst FilterLabel = styled.label`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n\n  width: 300px;\n  margin: 0 auto;\n\n  padding: 12px 16px;\n  border: 1px solid #2a2a2a;\n  border-radius: 4px;\n\n  font: inherit;\n  line-height: 16px;\n  letter-spacing: 0.01em;\n`;\n\nconst FilterInput = styled.input`\n  padding: 4px 12px;\n  width: 270px;\n  margin-top: 5px;\n  font: inherit;\n  line-height: 12px;\n  letter-spacing: 0.01em;\n`;\n\nconst Filter = ({ value, onChange }) => (\n  <FilterLabel>\n    Find contacts by name\n    <FilterInput type=\"text\" value={value} onChange={onChange} />\n  </FilterLabel>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst TitleContacts = styled.h2`\n  padding: 10px;\n  text-transform: uppercase;\n  font-size: 20px;\n  color: #5c6368;\n`;\n\nconst ContainerContacts = styled.div`\n  max-width: 1440px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nconst Container = ({ title, children }) => (\n  <ContainerContacts>\n    {title && <TitleContacts>{title}</TitleContacts>}\n    {children}\n  </ContainerContacts>\n);\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { useState, useEffect } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport shortid from 'shortid';\n// import useLocalStorage from './hooks/useLocalStorage';\nimport Section from './components/Section';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport Container from './components/Container';\n\n// state = {\n//   contacts: [\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//   ],\n//   filter: '',\n// };\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() =>\n    JSON.parse(localStorage.getItem('contacts') ?? []),\n  );\n  const [filter, setFilter] = useState('');\n\n  const addContact = ({ name, number }) => {\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    if (\n      contacts.find(\n        contact =>\n          contact.name.toLocaleLowerCase() === newContact.name.toLocaleLowerCase() ||\n          contact.number === newContact.number,\n      )\n    ) {\n      return toast.success(`${newContact.name} is already in contacts!`);\n    } else {\n      return setContacts(contacts => [newContact, ...contacts]);\n    }\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevState => prevState.filter(contact => contact.id !== contactId));\n  };\n\n  const changeFilter = e => {\n    setFilter(e.target.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizeFilter = filter.toLocaleLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizeFilter));\n  };\n\n  useEffect(() => {\n    setContacts(localStorage.setItem('contacts', JSON.stringify(contacts)));\n  }, [contacts]);\n\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        <Toaster />\n        <ContactForm onSubmit={addContact} />\n        <Container title=\"Contacts\">\n          <Filter value={filter} onChange={changeFilter} />\n          <ContactList contacts={getVisibleContacts()} onDeleteContact={deleteContact} />\n        </Container>\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}